openapi: 3.0.3
info:
  title: Better Stack Telemetry API
  description: |
    Better Stack Telemetry (formerly Logtail) is an OpenTelemetry-native infrastructure monitoring platform 
    that provides comprehensive log management, metrics, and tracing capabilities. This API allows you to 
    programmatically manage your telemetry infrastructure and query your data.
    
    ## Query Capabilities
    
    Query your telemetry data using the **Connect Remotely HTTP API** which provides:
    - Direct ClickHouse SQL query access via region-specific endpoints
    - Full SQL capabilities for logs, metrics, and spans
    - Multiple output formats (JSON, JSONEachRow, CSV, TSV, Pretty)
    - Query both live data and archived S3 data
    - High-performance querying with proper indexing
    
    ## Key Features
    - Log collection and management with real-time ingestion
    - OpenTelemetry integration for logs and metrics
    - Complete CRUD operations for sources and source groups
    - Custom metrics creation and management
    - Data transformation capabilities with VRL
    - Direct ClickHouse SQL queries for maximum flexibility
    - Multi-region deployment support
  version: 1.0.0
  contact:
    email: hello@betterstack.com
  license:
    name: Better Stack Terms of Service
    url: https://betterstack.com/terms
servers:
  - url: https://telemetry.betterstack.com/api/v1
    description: Better Stack Telemetry API Server (v1)
  - url: https://telemetry.betterstack.com/api/v2
    description: Better Stack Telemetry API Server (v2)
  - url: https://{ingesting_host}
    description: Log Ingestion Endpoint
    variables:
      ingesting_host:
        default: logs.betterstack.com
        description: Dynamic ingesting host provided when creating a source
  - url: https://{region}-connect.betterstackdata.com
    description: Connect Remotely HTTP API for direct ClickHouse queries
    variables:
      region:
        default: eu-nbg-2
        description: Data region for your sources
        enum:
          - eu-nbg-2
          - us-chi-1
          - ap-sin-1

security:
  - BearerAuth: []

paths:
  /sources:
    get:
      summary: List all sources
      description: |
        Retrieves a paginated list of all sources in your team. Sources are configurations 
        that define how logs are collected and processed from specific platforms or services.
      operationId: listSources
      tags:
        - Sources
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          description: Number of sources per page (maximum 50)
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 25
      responses:
        '200':
          description: Sources retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourcesListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      summary: Create a new source
      description: |
        Creates a new log source in Better Stack Telemetry. A source is a configuration 
        that defines how logs are collected and processed from a specific platform or service.
      operationId: createSource
      tags:
        - Sources
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSourceRequest'
      responses:
        '200':
          description: Source created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/ValidationError'

  /sources/{source_id}:
    get:
      summary: Get a single source
      description: |
        Retrieves detailed information about a specific source by its ID.
      operationId: getSource
      tags:
        - Sources
      parameters:
        - name: source_id
          in: path
          description: The unique identifier of the source
          required: true
          schema:
            type: string
            example: "src_12345"
      responses:
        '200':
          description: Source retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Source not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Update a source
      description: |
        Updates an existing source with new configuration. Only the fields provided 
        in the request body will be modified.
      operationId: updateSource
      tags:
        - Sources
      parameters:
        - name: source_id
          in: path
          description: The unique identifier of the source
          required: true
          schema:
            type: string
            example: "src_12345"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSourceRequest'
      responses:
        '200':
          description: Source updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Source not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          $ref: '#/components/responses/ValidationError'
    delete:
      summary: Delete a source
      description: |
        Permanently deletes a source and all associated configuration. This action cannot be undone.
      operationId: deleteSource
      tags:
        - Sources
      parameters:
        - name: source_id
          in: path
          description: The unique identifier of the source
          required: true
          schema:
            type: string
            example: "src_12345"
      responses:
        '204':
          description: Source deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Source not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /source-groups:
    get:
      summary: List all source groups
      description: |
        Retrieves a paginated list of all source groups in your team. Source groups are 
        organizational containers that help you categorize and manage related sources.
      operationId: listSourceGroups
      tags:
        - Source Groups
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          description: Number of source groups per page (maximum 50)
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 25
      responses:
        '200':
          description: Source groups retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceGroupsListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      summary: Create a new source group
      description: |
        Creates a new source group for organizing related sources.
      operationId: createSourceGroup
      tags:
        - Source Groups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSourceGroupRequest'
      responses:
        '201':
          description: Source group created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceGroup'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/ValidationError'

  /source-groups/{source_group_id}:
    get:
      summary: Get a single source group
      description: |
        Retrieves detailed information about a specific source group by its ID.
      operationId: getSourceGroup
      tags:
        - Source Groups
      parameters:
        - name: source_group_id
          in: path
          description: The unique identifier of the source group
          required: true
          schema:
            type: string
            example: "95251342"
      responses:
        '200':
          description: Source group retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceGroup'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Source group not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Update a source group
      description: |
        Updates an existing source group with new information. Only the fields provided 
        in the request body will be modified.
      operationId: updateSourceGroup
      tags:
        - Source Groups
      parameters:
        - name: source_group_id
          in: path
          description: The unique identifier of the source group
          required: true
          schema:
            type: string
            example: "95251342"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSourceGroupRequest'
      responses:
        '200':
          description: Source group updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceGroup'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Source group not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          $ref: '#/components/responses/ValidationError'
    delete:
      summary: Delete a source group
      description: |
        Permanently deletes a source group. This action cannot be undone.
      operationId: deleteSourceGroup
      tags:
        - Source Groups
      parameters:
        - name: source_group_id
          in: path
          description: The unique identifier of the source group
          required: true
          schema:
            type: string
            example: "95251342"
      responses:
        '204':
          description: Source group deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Source group not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /sources/{source_id}/metrics:
    get:
      summary: List all metrics for a source
      description: |
        Retrieves a paginated list of all available metrics for a specific source. 
        Metrics represent structured data points that can be extracted from log events.
      operationId: listSourceMetrics
      tags:
        - Metrics
      servers:
        - url: https://telemetry.betterstack.com/api/v2
          description: Better Stack Telemetry API Server (v2)
      parameters:
        - name: source_id
          in: path
          description: The unique identifier of the source
          required: true
          schema:
            type: integer
            example: 123
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          description: Number of metrics per page (maximum 50)
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 25
      responses:
        '200':
          description: Metrics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Source not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new metric
      description: |
        Creates a new metric for extracting structured data from log events for a specific source.
      operationId: createMetric
      tags:
        - Metrics
      servers:
        - url: https://telemetry.betterstack.com/api/v2
          description: Better Stack Telemetry API Server (v2)
      parameters:
        - name: source_id
          in: path
          description: The unique identifier of the source
          required: true
          schema:
            type: integer
            example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMetricRequest'
      responses:
        '201':
          description: Metric created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Source not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          $ref: '#/components/responses/ValidationError'

  /sources/{source_id}/metrics/{metric_id}:
    delete:
      summary: Delete a metric
      description: |
        Permanently deletes a metric from a source. This action cannot be undone.
      operationId: deleteMetric
      tags:
        - Metrics
      servers:
        - url: https://telemetry.betterstack.com/api/v2
          description: Better Stack Telemetry API Server (v2)
      parameters:
        - name: source_id
          in: path
          description: The unique identifier of the source
          required: true
          schema:
            type: integer
            example: 123
        - name: metric_id
          in: path
          description: The unique identifier of the metric
          required: true
          schema:
            type: string
            example: "g-456"
      responses:
        '204':
          description: Metric deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Metric or source not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /:
    post:
      summary: Ingest log data
      description: |
        Ingests log events into Better Stack Telemetry. Supports single events or batches of events.
        Maximum request size is 10 MiB. Recommended individual log record size is under 100 KiB.
      operationId: ingestLogs
      tags:
        - Log Ingestion
      servers:
        - url: https://{ingesting_host}
          variables:
            ingesting_host:
              default: logs.betterstack.com
              description: The ingesting host for your source
      security:
        - SourceTokenAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/LogEvent'
                - type: array
                  items:
                    $ref: '#/components/schemas/LogEvent'
          application/msgpack:
            schema:
              oneOf:
                - $ref: '#/components/schemas/LogEvent'
                - type: array
                  items:
                    $ref: '#/components/schemas/LogEvent'
          application/x-ndjson:
            schema:
              type: string
              description: Newline-delimited JSON format with one log event per line
      responses:
        '202':
          description: Log data accepted for processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "accepted"
        '403':
          description: Invalid source token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: Invalid request format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '413':
          description: Payload too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /:
    post:
      summary: Connect remotely - Direct ClickHouse SQL queries
      description: |
        Execute direct ClickHouse SQL queries against your telemetry data. This endpoint provides 
        full SQL capabilities for querying logs, metrics, and spans data.
        
        ## Query Capabilities
        - **Logs**: Query using table format `remote(t{source_id}_{source_name}_logs)`
        - **Metrics**: Query using table format `t{source_id}_{source_name}_metrics`
        - **Spans**: Query using table format for tracing data
        - **Archive Data**: Query S3-archived data using `s3Cluster()` function
        
        ## Best Practices
        - Always use `LIMIT` to control result size
        - Use `ORDER BY` for consistent results
        - Apply time range filters for better performance
        - Use shorter time ranges when possible
        
        ## Authentication
        Create credentials in dashboard under "Connect remotely". The password is shown only once during creation.
      operationId: connectRemotelyQuery
      tags:
        - Connect Remotely
      servers:
        - url: https://{region}-connect.betterstackdata.com
          variables:
            region:
              default: eu-nbg-2
              description: Data region for your sources
              enum:
                - eu-nbg-2
                - us-chi-1
                - ap-sin-1
      security:
        - ConnectRemotelyAuth: []
      parameters:
        - name: range-from
          in: query
          description: Start time as Unix microseconds timestamp
          required: false
          schema:
            type: integer
            format: int64
            example: 1705320000000000
        - name: range-to
          in: query
          description: End time as Unix microseconds timestamp  
          required: false
          schema:
            type: integer
            format: int64
            example: 1705323600000000
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              description: ClickHouse SQL query
              example: |
                SELECT dt, raw 
                FROM remote(t123456_your_source_logs) 
                WHERE dt >= now() - INTERVAL 1 HOUR 
                ORDER BY dt DESC 
                LIMIT 100 
                FORMAT JSONEachRow
      responses:
        '200':
          description: Query executed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClickHouseJSONResponse'
            text/csv:
              schema:
                type: string
                description: Query results in CSV format
            text/tab-separated-values:
              schema:
                type: string
                description: Query results in TSV format
            text/plain:
              schema:
                type: string
                description: Query results in JSONEachRow or Pretty format
        '400':
          description: Invalid SQL query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Access denied to requested data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '413':
          description: Query result too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '504':
          description: Query timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: API token for team-level operations. Get from Better Stack → API tokens.
    SourceTokenAuth:
      type: http
      scheme: bearer
      description: Source-specific token for log ingestion. Obtained when creating a source.
    ConnectRemotelyAuth:
      type: http
      scheme: basic
      description: Username and password for Connect Remotely API. Create credentials in dashboard under "Connect remotely". Password is shown only once during creation.

  schemas:
    CreateSourceRequest:
      type: object
      required:
        - name
        - platform
      properties:
        name:
          type: string
          description: Human-readable name for the source
          example: "Production API Logs"
        platform:
          type: string
          description: The type of platform this source represents
          enum:
            - http
            - nginx
            - docker
            - kubernetes
            - apache
            - mysql
            - postgresql
            - redis
            - mongodb
            - nodejs
            - python
            - ruby
            - php
            - go
            - java
            - dotnet
          example: "http"
        team_name:
          type: string
          description: Team name (required when using global API token)
          example: "production-team"
        ingesting_paused:
          type: boolean
          description: Whether to pause log ingestion for this source
          default: false
        source_group_id:
          type: string
          description: ID of the source group to assign this source to
          example: "group_12345"
        data_region:
          type: string
          description: Data storage region
          enum:
            - us_east
            - eu_west
            - ap_southeast
          example: "us_east"
        logs_retention:
          type: integer
          description: Log data retention period in days
          minimum: 1
          maximum: 365
          example: 30
        metrics_retention:
          type: integer
          description: Metrics retention period in days
          minimum: 1
          maximum: 365
          example: 90
        vrl_transformation:
          type: string
          description: Vector Remap Language (VRL) transformation rules
          example: |
            .timestamp = parse_timestamp!(.timestamp, format: "%Y-%m-%d %H:%M:%S")
            .level = upcase(.level)

    UpdateSourceRequest:
      type: object
      properties:
        name:
          type: string
          description: Human-readable name for the source
          example: "Updated Production API Logs"
        ingesting_paused:
          type: boolean
          description: Whether to pause log ingestion for this source
          example: false
        source_group_id:
          type: string
          description: ID of the source group to assign this source to
          example: "group_12345"
        live_tail_pattern:
          type: string
          description: Custom log message format for live tail
          example: "%{TIMESTAMP_ISO8601:timestamp} %{WORD:level} %{GREEDYDATA:message}"
        logs_retention:
          type: integer
          description: Log data retention period in days
          minimum: 1
          maximum: 365
          example: 30
        metrics_retention:
          type: integer
          description: Metrics retention period in days
          minimum: 1
          maximum: 365
          example: 90
        vrl_transformation:
          type: string
          description: Vector Remap Language (VRL) transformation rules
          example: |
            .timestamp = parse_timestamp!(.timestamp, format: "%Y-%m-%d %H:%M:%S")
            .level = upcase(.level)
        scrape_urls:
          type: array
          items:
            type: string
            format: uri
          description: URLs to scrape for log data
          example: ["https://api.example.com/logs", "https://api.example.com/metrics"]
        scrape_frequency_secs:
          type: integer
          description: Frequency of scraping in seconds
          minimum: 60
          example: 300
        scrape_request_headers:
          type: object
          additionalProperties:
            type: string
          description: Headers to include in scrape requests
          example:
            Authorization: "Bearer token123"
            User-Agent: "BetterStack/1.0"
        scrape_request_basic_auth_user:
          type: string
          description: Basic authentication username for scrape requests
          example: "scrape_user"
        scrape_request_basic_auth_password:
          type: string
          description: Basic authentication password for scrape requests
          example: "scrape_password"

    Source:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the source
          example: "src_12345abcdef"
        name:
          type: string
          description: Human-readable name of the source
          example: "Production API Logs"
        platform:
          type: string
          description: The platform type of the source
          example: "http"
        token:
          type: string
          description: Source token for log ingestion
          example: "source_token_abcdef123456"
        ingesting_host:
          type: string
          description: Host URL for log ingestion
          example: "logs.betterstack.com"
        ingesting_paused:
          type: boolean
          description: Whether log ingestion is paused
          example: false
        data_region:
          type: string
          description: Data storage region
          example: "us_east"
        logs_retention:
          type: integer
          description: Log retention period in days
          example: 30
        metrics_retention:
          type: integer
          description: Metrics retention period in days
          example: 90
        created_at:
          type: string
          format: date-time
          description: Source creation timestamp
          example: "2025-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          description: Source last update timestamp
          example: "2025-01-15T10:30:00Z"

    CreateSourceGroupRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Human-readable name for the source group
          example: "Backend Services"
        team_name:
          type: string
          description: Team name (required when using global API token)
          example: "production-team"
        sort_index:
          type: integer
          description: Sort order index for the source group
          example: 0

    UpdateSourceGroupRequest:
      type: object
      properties:
        name:
          type: string
          description: Human-readable name for the source group
          example: "Updated Backend Services"
        sort_index:
          type: integer
          description: Sort order index for the source group
          example: 1

    SourceGroup:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the source group
          example: "95251342"
        name:
          type: string
          description: Human-readable name of the source group
          example: "Backend Services"
        sort_index:
          type: integer
          description: Sort order index for the source group
          example: 0
        team_name:
          type: string
          description: Name of the team that owns this source group
          example: "production-team"
        created_at:
          type: string
          format: date-time
          description: Source group creation timestamp
          example: "2025-06-30T14:00:55.700Z"
        updated_at:
          type: string
          format: date-time
          description: Source group last update timestamp
          example: "2025-06-30T14:14:40.304Z"

    CreateMetricRequest:
      type: object
      required:
        - name
        - sql_expression
        - type
      properties:
        name:
          type: string
          description: Human-readable name for the metric
          example: "response_time"
        sql_expression:
          type: string
          description: SQL expression to extract the metric from log data
          example: "getJSON(raw, 'message_json.duration_ms')"
        type:
          type: string
          enum:
            - string_low_cardinality
            - int64_delta
            - float64_delta
            - datetime64_delta
            - boolean
          description: Data type of the metric
          example: "float64_delta"
        aggregations:
          type: array
          items:
            type: string
            enum:
              - avg
              - count
              - max
              - min
              - sum
              - p95
              - p99
          description: Available aggregation functions for this metric
          example: ["avg", "p95", "min", "max"]
        team_name:
          type: string
          description: Team name (required when using global API token)
          example: "production-team"

    Metric:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the metric
          example: "metric_123"
        name:
          type: string
          description: Human-readable name of the metric
          example: "response_time"
        sql_expression:
          type: string
          description: SQL expression used to extract the metric
          example: "getJSON(raw, 'message_json.duration_ms')"
        type:
          type: string
          description: Data type of the metric
          example: "float64_delta"
        aggregations:
          type: array
          items:
            type: string
          description: Available aggregation functions
          example: ["avg", "p95", "min", "max"]
        created_at:
          type: string
          format: date-time
          description: Metric creation timestamp
          example: "2025-01-15T10:30:00Z"

    LogEvent:
      type: object
      description: |
        A log event to be ingested. Can contain arbitrary fields. The 'dt' field is used for custom timestamps.
      properties:
        message:
          type: string
          description: The main log message
          example: "User authentication successful"
        level:
          type: string
          description: Log level (info, warn, error, debug, etc.)
          example: "info"
        dt:
          oneOf:
            - type: string
              format: date-time
              description: Timestamp in RFC 3339 or ISO 8601 format
            - type: integer
              description: UNIX timestamp in seconds
            - type: number
              description: UNIX timestamp with fractional seconds
          example: "2025-01-15T10:30:00Z"
      additionalProperties: true

    SourcesListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SourceListItem'
        pagination:
          $ref: '#/components/schemas/PaginationLinks'

    SourceListItem:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the source
          example: "95"
        type:
          type: string
          enum: ["source"]
          description: Resource type
          example: "source"
        attributes:
          type: object
          properties:
            name:
              type: string
              description: Human-readable name of the source
              example: "Nginx"
            platform:
              type: string
              description: The platform type of the source
              example: "nginx"
            token:
              type: string
              description: Source token for log ingestion
              example: "FczKcxEhjEDE58dBX7XaeX1q"
            created_at:
              type: string
              format: date-time
              description: Source creation timestamp
              example: "2025-01-15T10:30:00Z"
            updated_at:
              type: string
              format: date-time
              description: Source last update timestamp
              example: "2025-01-15T10:30:00Z"

    SourceGroupsListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SourceGroupListItem'
        pagination:
          $ref: '#/components/schemas/PaginationLinks'

    SourceGroupListItem:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the source group
          example: "95251342"
        type:
          type: string
          enum: ["source_group"]
          description: Resource type
          example: "source_group"
        attributes:
          type: object
          properties:
            id:
              type: integer
              description: Numeric identifier for the source group
              example: 95251342
            name:
              type: string
              description: Human-readable name of the source group
              example: "Backend sources"
            created_at:
              type: string
              format: date-time
              description: Source group creation timestamp
              example: "2025-06-30T14:00:55.700Z"
            updated_at:
              type: string
              format: date-time
              description: Source group last update timestamp
              example: "2025-06-30T14:14:40.304Z"
            sort_index:
              type: integer
              description: Sort order index for the source group
              example: 0
            team_name:
              type: string
              description: Name of the team that owns this source group
              example: "Test Team"

    MetricsListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MetricListItem'
        pagination:
          $ref: '#/components/schemas/PaginationLinks'

    MetricListItem:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the metric
          example: "metric_123"
        type:
          type: string
          enum: ["metric"]
          description: Resource type
          example: "metric"
        attributes:
          type: object
          properties:
            name:
              type: string
              description: Human-readable name of the metric
              example: "response_time"
            sql_expression:
              type: string
              description: SQL expression used to extract the metric from log data
              example: "EXTRACT(duration_ms FROM log)"
            aggregations:
              type: array
              items:
                type: string
                enum: ["avg", "min", "max", "sum", "count", "distinct"]
              description: Available aggregation functions for this metric
              example: ["avg", "min", "max", "sum"]
            type:
              type: string
              enum: ["numeric", "categorical", "boolean"]
              description: Data type of the metric
              example: "numeric"

    ClickHouseJSONResponse:
      type: object
      description: Response from ClickHouse query in JSON format
      properties:
        meta:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              type:
                type: string
          description: Metadata about the columns in the result
        data:
          type: array
          items:
            type: object
          description: Query result data
        rows:
          type: integer
          description: Number of rows returned
      example:
        meta:
          - name: "dt"
            type: "DateTime"
          - name: "raw"
            type: "String"
        data:
          - dt: "2025-01-15 10:30:00"
            raw: "User authentication successful"
          - dt: "2025-01-15 10:29:55"
            raw: "API request processed"
        rows: 2

    PaginationLinks:
      type: object
      properties:
        first:
          type: string
          format: uri
          description: URL to the first page
          example: "https://telemetry.betterstack.com/api/v1/sources?page=1"
        last:
          type: string
          format: uri
          description: URL to the last page
          example: "https://telemetry.betterstack.com/api/v1/sources?page=5"
        prev:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page (null if on first page)
          example: "https://telemetry.betterstack.com/api/v1/sources?page=1"
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page (null if on last page)
          example: "https://telemetry.betterstack.com/api/v1/sources?page=3"

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message describing what went wrong
          example: "Invalid request format"
        details:
          type: string
          description: Additional error details
          example: "The request body contains invalid JSON"

  responses:
    Unauthorized:
      description: Authentication required or invalid token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            missing_auth:
              summary: Missing authorization header
              value:
                error: "Authorization header required"
            invalid_token:
              summary: Invalid API token
              value:
                error: "Invalid or expired API token"

    ValidationError:
      description: Request validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            missing_required:
              summary: Missing required field
              value:
                error: "Missing required field: name"
            invalid_platform:
              summary: Invalid platform value
              value:
                error: "Invalid platform. Must be one of: http, nginx, docker, etc."

tags:
  - name: Sources
    description: Operations for managing log sources
  - name: Source Groups
    description: Operations for managing source groups
  - name: Metrics
    description: Operations for retrieving and managing metrics from sources
  - name: Log Ingestion
    description: Operations for ingesting log data
  - name: Connect Remotely
    description: Direct ClickHouse SQL queries for comprehensive data analysis

externalDocs:
  description: Better Stack Telemetry Documentation
  url: https://betterstack.com/docs/logs/